{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\10172\\\\Desktop\\\\fs1\\\\fullstacktask\\\\part1\\\\unicafe\\\\part1\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Button = ({\n  clickEvent,\n  text\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, text));\n};\n\nconst Statistics = props => {\n  const {\n    good,\n    neutral,\n    bad,\n    all,\n    average,\n    positive\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, \"good \", good, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 19\n    }\n  }), \"neutral \", neutral, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  }), \"bad \", bad, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }), \"all \", all, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }), \"average \", average, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }), \"positive \", positive, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 27\n    }\n  }));\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const all = good + neutral + bad;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"give feedback\"), /*#__PURE__*/React.createElement(Button, {\n    clickEvent: () => {\n      setGood(good + 1);\n    },\n    text: 'good',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    clickEvent: () => {\n      setNeutral(neutral + 1);\n    },\n    text: 'neutral',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    clickEvent: () => {\n      setBad(bad + 1);\n    },\n    text: 'bad',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 71\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"statistics\"), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    all: all,\n    average: (good - bad) / all,\n    positive: good / all / 100 + ' %',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA","map":{"version":3,"sources":["C:/Users/10172/Desktop/fs1/fullstacktask/part1/unicafe/part1/src/index.js"],"names":["React","useState","ReactDOM","Button","clickEvent","text","float","Statistics","props","good","neutral","bad","all","average","positive","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Button = ({clickEvent,text}) => {\n  \n  return (\n    <div style = {{float:'left'}}>\n      <button onClick = {clickEvent}>{text}</button>\n    </div>\n  )\n}\n\nconst Statistics = (props) => {\n  const {good,neutral,bad,all,average,positive} = props\n  return (\n    <div>\n      good {good} <br/>\n      neutral {neutral} <br/>\n      bad {bad} <br/>\n      all {all} <br/>\n      average {average} <br/>\n      positive {positive} <br/>\n    </div>\n  )\n}\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const all = good + neutral + bad\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button clickEvent = {() => {setGood(good + 1)}} text = {'good'} />\n      <Button clickEvent = {() => {setNeutral(neutral + 1)}} text = {'neutral'} />\n      <Button clickEvent = {() => {setBad(bad + 1)}} text = {'bad'} /><br/>\n      <h1>statistics</h1>\n      <Statistics good = {good} neutral = {neutral} bad = {bad} \n      all = {all} average = { (good - bad)/all} \n      positive = {((good/all)/100+' %')}/>\n    </div>\n  )\n}\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"]},"metadata":{},"sourceType":"module"}