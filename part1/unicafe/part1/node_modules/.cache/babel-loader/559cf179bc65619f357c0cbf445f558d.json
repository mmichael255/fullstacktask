{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\10172\\\\Desktop\\\\fs1\\\\fullstacktask\\\\part1\\\\unicafe\\\\part1\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Button = ({\n  clickEvent,\n  text\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, text));\n};\n\nconst Statistics = props => {\n  const {\n    good,\n    neutral,\n    bad,\n    all,\n    average,\n    positive\n  } = props;\n\n  if (props.good === 0 && props.neutral === 0 && props.bad === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, \"No feedback given\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Statistic, {\n      text: \"good\",\n      value: good,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"neutral\",\n      value: neutral,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"bad\",\n      value: bad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"all\",\n      value: all,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"average\",\n      value: average,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"positive\",\n      value: positive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }));\n  }\n};\n\nconst Statistic = ({\n  text,\n  value\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      width: '500'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, text), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, value))));\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const all = good + neutral + bad;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"give feedback\"), /*#__PURE__*/React.createElement(Button, {\n    clickEvent: () => {\n      setGood(good + 1);\n    },\n    text: 'good',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    clickEvent: () => {\n      setNeutral(neutral + 1);\n    },\n    text: 'neutral',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    clickEvent: () => {\n      setBad(bad + 1);\n    },\n    text: 'bad',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 71\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"statistics\"), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    all: all,\n    average: (good - bad) / all,\n    positive: good / all / 100 + ' %',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA","map":{"version":3,"sources":["C:/Users/10172/Desktop/fs1/fullstacktask/part1/unicafe/part1/src/index.js"],"names":["React","useState","ReactDOM","Button","clickEvent","text","float","Statistics","props","good","neutral","bad","all","average","positive","Statistic","value","width","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Button = ({clickEvent,text}) => {\n  \n  return (\n    <div style = {{float:'left'}}>\n      <button onClick = {clickEvent}>{text}</button>\n    </div>\n  )\n}\n\nconst Statistics = (props) => {\n  const {good,neutral,bad,all,average,positive} = props\n  if (props.good === 0 && props.neutral === 0 && props.bad === 0) {\n    return (\n      <div>\n      <h3>No feedback given</h3>\n    </div>\n    )\n  }else {\n    return (\n      <div>\n        \n          <Statistic text = 'good' value = {good}/>\n          <Statistic text = 'neutral' value = {neutral} />\n          <Statistic text = 'bad' value = {bad} />\n          <Statistic text = 'all' value = {all} />\n          <Statistic text = 'average' value = {average} />\n          <Statistic text = 'positive' value = {positive} />\n        \n      </div>\n    )\n  }\n}\nconst Statistic = ({text, value}) => {\n  return (\n    <div>\n      <table style={{width:'500'}}>\n        <tr>\n          <td>{text}</td>\n          <td>{value}</td>\n        </tr>\n      </table>\n    </div>\n  )\n}\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const all = good + neutral + bad\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button clickEvent = {() => {setGood(good + 1)}} text = {'good'} />\n      <Button clickEvent = {() => {setNeutral(neutral + 1)}} text = {'neutral'} />\n      <Button clickEvent = {() => {setBad(bad + 1)}} text = {'bad'} /><br/>\n      <h1>statistics</h1>\n      <Statistics good = {good} neutral = {neutral} bad = {bad} \n      all = {all} average = { (good - bad)/all} \n      positive = {((good/all)/100+' %')}/>\n    </div>\n  )\n}\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"]},"metadata":{},"sourceType":"module"}